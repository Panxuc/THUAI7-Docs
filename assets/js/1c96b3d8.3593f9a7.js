"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[459],{3905:(t,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>v});var r=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function a(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var c=r.createContext({}),u=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},s=function(t){var e=u(t.components);return r.createElement(c.Provider,{value:e},t.children)},d="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,o=t.originalType,c=t.parentName,s=a(t,["components","mdxType","originalType","parentName"]),d=u(n),f=i,v=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(v,l(l({ref:e},s),{},{components:n})):r.createElement(v,l({ref:e},s))}));function v(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=n.length,l=new Array(o);l[0]=f;var a={};for(var c in e)hasOwnProperty.call(e,c)&&(a[c]=e[c]);a.originalType=t,a[d]="string"==typeof t?t:i,l[1]=a;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5182:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const o={},l="\u63a5\u53e3\u4e00\u89c8",a={unversionedId:"detail/README",id:"detail/README",title:"\u63a5\u53e3\u4e00\u89c8",description:"",source:"@site/docs/detail/README.md",sourceDirName:"detail",slug:"/detail/",permalink:"/docs/detail/",draft:!1,editUrl:"https://github.com/Panxuc/THUAI7-GameRules/edit/main/docs/detail/README.md",tags:[],version:"current",lastUpdatedBy:"Panxuc",lastUpdatedAt:1692978959,formattedLastUpdatedAt:"2023\u5e748\u670825\u65e5",frontMatter:{},sidebar:"thuai7",previous:{title:"\u5f97\u5206",permalink:"/docs/score/"}},c={},u=[],s={toc:u},d="wrapper";function p(t){let{components:e,...n}=t;return(0,i.kt)(d,(0,r.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u63a5\u53e3\u4e00\u89c8"},"\u63a5\u53e3\u4e00\u89c8"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"    // \u6307\u6325\u672c\u89d2\u8272\u8fdb\u884c\u79fb\u52a8\uff0c`timeInMilliseconds` \u4e3a\u79fb\u52a8\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff1b`angleInRadian` \u8868\u793a\u79fb\u52a8\u7684\u65b9\u5411\uff0c\u5355\u4f4d\u662f\u5f27\u5ea6\uff0c\u4f7f\u7528\u6781\u5750\u6807\u2014\u2014\u7ad6\u76f4\u5411\u4e0b\u65b9\u5411\u4e3a x \u8f74\uff0c\u6c34\u5e73\u5411\u53f3\u65b9\u5411\u4e3a y \u8f74\n    virtual std::future<bool> Move(int64_t timeInMilliseconds, double angleInRadian) = 0;\n\n    // \u5411\u7279\u5b9a\u65b9\u5411\u79fb\u52a8\n    virtual std::future<bool> MoveRight(int64_t timeInMilliseconds) = 0;\n    virtual std::future<bool> MoveUp(int64_t timeInMilliseconds) = 0;\n    virtual std::future<bool> MoveLeft(int64_t timeInMilliseconds) = 0;\n    virtual std::future<bool> MoveDown(int64_t timeInMilliseconds) = 0;\n\n    // \u5927\u672c\u8425\n    virtual std::future<bool> InstallModule(std::shared_ptr<const THUAI7::Ship>,int32_t Module)`\n    virtual std::vector<std::shared_ptr<const THUAI7::Ship>> GetShipInformation()`\n    virtual std::future<bool> BuildShip(int32_t shipType)`\n    virtual std::future<int> CurrentEconomic()`\n\n    //\u8230\u8239\n    virtual std::future<bool> Recover()`\n    virtual std::future<bool> Produce(int32_t cellX, int32_t cellY)`\n    virtual std::future<bool> Rebuild(int32_t cellX, int32_t cellY)`\n    virtual std::future<bool> Construct(int32_t buildingID\uff0cint32_t cellX, int32_t cellY)`\n\n    //\u653b\u51fb\n    virtual std::future<bool> Attack(double angleInRadian)`\uff1a\n\n    // \u4fe1\u606f\u67e5\u8be2\u3001\u63a5\u6536\n    [[nodiscard]] virtual THUAI7::PlaceType GetPlaceType(int32_t cellX, int32_t cellY)`\n    [[nodiscard]] virtual int32_t GetResourceProgress(int32_t cellX, int32_t cellY) const`\n    [[nodiscard]] virtual int32_t GetBuildingHealthValue(int32_t cellX, int32_t cellY) const`\n    [[nodiscard]] virtual std::vector<std::vector<THUAI7::PlaceType>> GetFullMap() const`\n\n    // \u5176\u4ed6\n    virtual std::future<bool> Wait() = 0;\n    [[nodiscard]] virtual std::shared_ptr<const THUAI7::GameInfo> GetGameInfo() const = 0;\n\n    // \u83b7\u53d6\u6240\u6709\u73a9\u5bb6\u7684GUID\n    [[nodiscard]] virtual std::vector<int64_t> GetPlayerGUIDs() const = 0;\n\n    // \u83b7\u53d6\u6e38\u620f\u76ee\u524d\u6240\u8fdb\u884c\u7684\u5e27\u6570\n    [[nodiscard]] virtual int GetFrameCount() const = 0;\n\n    /*****\u9009\u624b\u53ef\u80fd\u7528\u7684\u8f85\u52a9\u51fd\u6570*****/\n\n    // \u83b7\u53d6\u6307\u5b9a\u683c\u5b50\u4e2d\u5fc3\u7684\u5750\u6807\n    [[nodiscard]] static inline int CellToGrid(int cell) noexcept\n    {\n        return cell * numOfGridPerCell + numOfGridPerCell / 2;\n    }\n\n    // \u83b7\u53d6\u6307\u5b9a\u5750\u6807\u70b9\u6240\u4f4d\u4e8e\u7684\u683c\u5b50\u7684 X \u5e8f\u53f7\n    [[nodiscard]] static inline int GridToCell(int grid) noexcept\n    {\n        return grid / numOfGridPerCell;\n    }\n\n    [[nodiscard]] virtual bool HaveView(int gridX, int gridY) const = 0;\n\n    // \u7528\u4e8eDEBUG\u7684\u8f93\u51fa\u51fd\u6570\uff0c\u9009\u624b\u4ec5\u5728\u5f00\u542fDebug\u6a21\u5f0f\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4f7f\u7528\n\n    virtual void Print(std::string str) const = 0;\n    virtual void PrintStudent() const = 0;\n    virtual void PrintTricker() const = 0;\n    virtual void PrintProp() const = 0;\n    virtual void PrintSelfInfo() const = 0;\n")))}p.isMDXComponent=!0}}]);